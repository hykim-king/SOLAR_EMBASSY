#application.properties : spring 설정+DD 파일
server.port=8888
server.servlet.session.timeout=10m
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:mysql://${MYSQL_HOST:localhost}:3306/SOLAR_EMBASSY
<<<<<<< HEAD
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/solar_embassy
spring.datasource.url=jdbc:mysql://ls-46a1da224b7f14e2d3a315170ce11fbfdcd2e7b8.cqkusnvcl9ga.ap-northeast-2.rds.amazonaws.com:3306/solar_embassy

#spring.datasource.username=root
#spring.datasource.password=mysql
=======
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/solar_embassy_db
spring.datasource.url=jdbc:mysql://ls-46a1da224b7f14e2d3a315170ce11fbfdcd2e7b8.cqkusnvcl9ga.ap-northeast-2.rds.amazonaws.com:3306/solar_embassy

#spring.datasource.username=root
#spring.datasource.password=
>>>>>>> 30bc9e4fbc113be414459f3db85770df24357795

spring.datasource.username=solar
spring.datasource.password=a1234

spring.datasource.username=solar
spring.datasource.password=a1234



mybatis.mapper-locations=/mapper/*Mapper.xml
#mybatis 맵퍼에서 dto 타입의 패키지 자동 완성
mybatis.type-aliases-package=com.community.solar_embassy.dto

#실제로 저장하지 않고 임시 저장하는 경로
spring.servlet.multipart.location=${user.home}/.temp/img
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB
#파일을 업로드할 서버
#img.upload.path=/Users/choegyeongmin/intellij_study_workspace/spring_mybatis/src/main/resources/static/img
img.upload.path=${user.dir}/solar_embassy/src/main/resources/static/img
#${user.dir} : intelliJ workspace 경로

# google login
google.auth.url=https://oauth2.googleapis.com
google.login.url=https://accounts.google.com
google.redirect.uri=http://localhost:88888/user/login.do
#??? ??? ????? ID ??
google.client.id=384353138780-d327tn438uoqloo7flo6rrddrro8hn95.apps.googleusercontent.com
#??? ??? ????? ?? ?? ??
google.secret=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
google.auth.scope=profile,email,openid
# application-oauth.properties
spring.profiles.includes = oauth