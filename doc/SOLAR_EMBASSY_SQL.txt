create table admin
(
    admin_id    varchar(20) not null
        primary key,
    admin_level int         null,
    department  varchar(10) null
);

create table attend_check
(
    check_day int not null
        primary key,
    points    int not null
);

create table auto
(
    AUTO_NO      int         not null,
    AUTO_NAME    varchar(20) not null,
    CODE_NAME    varchar(20) not null,
    COM          varchar(20) null,
    AUTO_TYPE    varchar(10) null,
    RELEASE_DATE date        null,
    SEAT         int         null,
    MPG          double      null,
    ENGINE       varchar(10) null
);

create table auto_img
(
    AUTO_IMG_NO   int          not null,
    AUTO_IMG_PATH varchar(255) null
);

create table bu_img
(
    img_path int not null,
    img_no   int auto_increment
        primary key
);

create table business
(
    bu_id        varchar(40)  not null,
    bu_passwords varchar(15)  not null,
    email        varchar(320) null,
    bu_phone     varchar(16)  not null,
    bu_name      varchar(20)  not null,
    cr_num       varchar(10)  not null,
    bu_title     varchar(60)  not null,
    bu_address   varchar(80)  not null,
    bu_code      int          not null,
    img_no       int          null,
    primary key (bu_id, bu_phone),
    constraint bu_address
        unique (bu_address),
    constraint bu_title
        unique (bu_title)
);

create table company
(
    COM_NO     int         not null,
    COM_NAME   varchar(20) not null,
    ADDRESS    varchar(30) null,
    PACOM      varchar(20) null,
    FOUND_DATE date        null,
    FOUNDERS   varchar(20) null,
    CEO        varchar(20) null,
    INDUSTRIES varchar(30) null,
    SLOGAN     varchar(20) null,
    CONTENT    longtext    null
);

create table galaxy
(
    galaxy_no int          not null
        primary key,
    theme     varchar(100) not null,
    birth     date         not null,
    state     int          null
);

create table grade_table
(
    user_level int         not null
        primary key,
    grade      varchar(50) null,
    total_exp  int         not null
);

create table room
(
    ro_no    int auto_increment
        primary key,
    bu_id    varchar(40) not null,
    bu_phone varchar(16) not null,
    img_no   int         null,
    ro_count varchar(20) not null,
    ro_name  varchar(50) not null,
    ro_price varchar(40) not null,
    checkin  datetime    not null,
    checkout datetime    not null,
    ro_info  longtext    null,
    constraint img_no
        foreign key (img_no) references bu_img (img_no),
    constraint room_ibfk_1
        foreign key (bu_id, bu_phone) references business (bu_id, bu_phone)
            on update cascade on delete cascade
);

create index bu_id
    on room (bu_id, bu_phone);

create table user
(
    user_id          varchar(20)                         not null
        primary key,
    user_name        varchar(20)                         not null,
    passwords        varchar(20)                         not null,
    email            varchar(320)                        not null,
    hp               varchar(12)                         not null,
    tell             varchar(12)                         null,
    admin_id         varchar(20)                         null,
    reg_date         timestamp default CURRENT_TIMESTAMP not null,
    last_login_time  timestamp                           null,
    update_time      timestamp                           null,
    state            int                                 null,
    point_1          int                                 null,
    point_2          int                                 null,
    exp              int                                 null,
    user_level       int                                 null,
    grade            int                                 null,
    birth            timestamp                           null,
    profile_image_no int                                 null,
    constraint FK_admin_TO_user
        foreign key (admin_id) references admin (admin_id)
);

create table booking
(
    bo_num     int auto_increment
        primary key,
    bo_date    timestamp    null,
    bu_id      varchar(100) not null,
    bu_phone   varchar(16)  not null,
    bu_title   varchar(60)  not null,
    bu_address varchar(80)  not null,
    ro_name    varchar(50)  not null,
    ro_no      int          not null,
    user_name  varchar(20)  not null,
    user_id    varchar(20)  not null,
    user_phone varchar(16)  not null,
    checkin    datetime     not null,
    checkout   datetime     not null,
    status     int          null,
    payment    varchar(255) not null,
    price      int          not null,
    reg_date   timestamp    not null,
    bu_check   varchar(100) not null,
    constraint booking_ibfk_1
        foreign key (bu_id, bu_phone) references business (bu_id, bu_phone)
            on update cascade on delete cascade,
    constraint booking_ibfk_2
        foreign key (ro_no) references room (ro_no)
            on update cascade on delete cascade,
    constraint booking_ibfk_3
        foreign key (user_id) references user (user_id)
            on update cascade on delete cascade
);

create table letter
(
    letter_no     int          not null
        primary key,
    sender_id     varchar(100) not null,
    receiver_id   varchar(100) not null,
    title         varchar(100) not null,
    contents      longtext     not null,
    sent_time     timestamp    not null,
    read_time     timestamp    null,
    receive_state int          null,
    receiver_del  int          null,
    sender_del    int          null,
    constraint FK_user_TO_letter
        foreign key (sender_id) references user (user_id),
    constraint FK_user_TO_letter2
        foreign key (receiver_id) references user (user_id)
);

create table notice
(
    notice_no int          not null
        primary key,
    user_id   varchar(100) not null,
    title     varchar(100) not null,
    contents  longtext     not null,
    post_time timestamp    not null,
    constraint FK_notice_user_admin
        foreign key (user_id) references user (user_id)
);

create table planet
(
    planet_no   int          not null
        primary key,
    title       varchar(100) not null,
    planet_type int          not null,
    user_id     varchar(20)  not null,
    contents    longtext     not null,
    post_time   timestamp    not null,
    update_time timestamp    null,
    update_id   varchar(20)  null,
    likes       int          null,
    dislikes    int          null,
    galaxy_no   int          null,
    views       int          null,
    state       int          null,
    constraint FK_galaxy_TO_planet
        foreign key (galaxy_no) references galaxy (galaxy_no),
    constraint FK_user_TO_planet
        foreign key (user_id) references user (user_id)
);

create table planet_image
(
    planet_image_no varchar(255) not null
        primary key,
    planet_no       int          not null,
    image_path      varchar(255) not null,
    post_time       timestamp    not null,
    constraint FK_planet_TO_planet_image
        foreign key (planet_no) references planet (planet_no)
);

create table profile_image
(
    profile_image_no int          not null
        primary key,
    user_id          varchar(20)  not null,
    image_path       varchar(100) not null,
    post_time        timestamp    not null,
    constraint FK_user_TO_user_image
        foreign key (user_id) references user (user_id)
);

create table reply
(
    reply_no    varchar(100) not null
        primary key,
    planet_no   int          not null,
    fk_reply_no varchar(100) null,
    user_id     varchar(20)  not null,
    contents    varchar(100) not null,
    post_time   timestamp    not null,
    update_time timestamp    null,
    likes       int          null,
    dislikes    int          null,
    state       int          null,
    constraint FK_planet_TO_reply
        foreign key (planet_no) references planet (planet_no),
    constraint FK_reply_TO_reply
        foreign key (fk_reply_no) references reply (reply_no),
    constraint FK_user_TO_reply
        foreign key (user_id) references user (user_id)
);

create table reply_image
(
    reply_image_no int          not null
        primary key,
    reply_no       varchar(100) not null,
    image_path     varchar(100) not null,
    post_time      timestamp    not null,
    constraint FK_reply_TO_reply_image
        foreign key (reply_no) references reply (reply_no)
);

create table reserved
(
    bo_num int not null,
    ro_no  int not null,
    primary key (bo_num, ro_no),
    constraint reserved_ibfk_1
        foreign key (bo_num) references booking (bo_num)
            on update cascade on delete cascade,
    constraint reserved_ibfk_2
        foreign key (ro_no) references room (ro_no)
            on update cascade on delete cascade
);

create table review
(
    re_num        int         not null
        primary key,
    bo_num        int         not null,
    user_id       varchar(20) not null,
    post_date     timestamp   not null,
    contents      longtext    not null,
    state         int         null,
    likes         int         null,
    content_reply longtext    null,
    constraint review_ibfk_1
        foreign key (bo_num) references booking (bo_num)
            on update cascade on delete cascade,
    constraint review_ibfk_2
        foreign key (user_id) references user (user_id)
            on update cascade on delete cascade
);

create table user_block
(
    block_no     int          not null
        primary key,
    user_id      varchar(20)  not null,
    block_obj_id varchar(20)  not null,
    reason       varchar(255) null,
    post_time    timestamp    not null,
    update_time  timestamp    null,
    constraint FK_user_TO_user_blacklist
        foreign key (user_id) references user (user_id),
    constraint FK_user_TO_user_blacklist2
        foreign key (block_obj_id) references user (user_id)
);

